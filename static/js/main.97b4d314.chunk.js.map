{"version":3,"sources":["App.js","Display.js","Data.js","Keyboard.js","index.js"],"names":["App","operators","numbers","useState","input","setInput","output","setOutput","calculatorData","setCalculatorData","handleSubmit","total","eval","handleClear","handleNumbers","value","length","lastChat","charAt","isLastChatOperator","includes","handleOperators","beforeLastChat","beforeLastChatIsOperator","lastChatIsOperator","validOp","updatedValue","substring","dotOperator","formattedValue","handleInput","number","find","num","operator","op","handleOutput","useEffect","className","Display","id","calcData","KeyBoard","Data","map","item","key","onClick","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97b4d314.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Display from \"./Display\";\nimport KeyBoard from \"./Keyboard\";\n\nfunction App() {\n  const operators = [\"AC\", \"/\", \"x\", \"+\", \"-\", \"=\"];\n  const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const [input, setInput] = useState(\"0\");\n  const [output, setOutput] = useState(\"\");\n  const [calculatorData, setCalculatorData] = useState(\"\");\n\n  const handleSubmit = () => {\n    const total = eval(calculatorData);\n    setInput(`${total}`);\n    setCalculatorData(`${total}`);\n    setOutput(`${total}`);\n  };\n  const handleClear = () => {\n    setInput(\"0\");\n    setCalculatorData(\"\");\n    setOutput(\"\");\n  };\n  const handleNumbers = (value) => {\n    if (!calculatorData.length) {\n      setInput(`${value}`);\n      setCalculatorData(`${value}`);\n    } else {\n      if (value === 0 && (calculatorData === \"0\" || input === \"0\")) {\n        setCalculatorData(`${calculatorData}`);\n      } else {\n        const lastChat = calculatorData.charAt(calculatorData.length - 1);\n        // console.log(`lastChat${lastChat}`);\n        const isLastChatOperator =\n          lastChat === \"*\" || operators.includes(lastChat);\n        //console.log(`isLastChatOperator:${isLastChatOperator}`);\n        setInput(isLastChatOperator ? `${value}` : `${input}${value}`);\n        setCalculatorData(`${calculatorData}${value}`);\n      }\n    }\n  };\n  const handleOperators = (value) => {\n    if (calculatorData.length) {\n      setInput(`${value}`);\n      const beforeLastChat = calculatorData.charAt(calculatorData.length - 2);\n      // console.log(`beforeLastChat:${beforeLastChat}`);\n      const beforeLastChatIsOperator =\n        operators.includes(beforeLastChat) || beforeLastChat === \"*\";\n      const lastChat = calculatorData.charAt(calculatorData.length - 1);\n      const lastChatIsOperator =\n        operators.includes(lastChat) || lastChat === \"*\";\n      const validOp = value === \"x\" ? \"*\" : value;\n      if (\n        (lastChatIsOperator && value !== \"-\") ||\n        (beforeLastChatIsOperator && lastChatIsOperator)\n      ) {\n        if (beforeLastChatIsOperator) {\n          const updatedValue = `${calculatorData.substring(\n            0,\n            calculatorData.length - 2\n          )}${value}`;\n          setCalculatorData(updatedValue);\n        } else {\n          setCalculatorData(\n            `${calculatorData.substring(\n              0,\n              calculatorData.length - 1\n            )}${validOp}`\n          );\n        }\n      } else {\n        setCalculatorData(`${calculatorData}${validOp}`);\n      }\n    }\n  };\n  const dotOperator = () => {\n    const lastChat = calculatorData.charAt(calculatorData.length - 1);\n    if (!calculatorData.length) {\n      setInput(\"0.\");\n      setCalculatorData(\"0.\");\n    } else {\n      if (lastChat === \"*\" || operators.includes(lastChat)) {\n        setInput(\"0.\");\n        setCalculatorData(`${calculatorData}0.`);\n      } else {\n        setInput(\n          lastChat === \".\" || input.includes(\".\") ? `${input}` : `${input}.`\n        );\n        const formattedValue =\n          lastChat === \".\" || input.includes(\".\")\n            ? `${calculatorData}`\n            : `${calculatorData}.`;\n        setCalculatorData(formattedValue);\n      }\n    }\n  };\n\n  const handleInput = (value) => {\n    const number = numbers.find((num) => num === value);\n    const operator = operators.find((op) => op === value);\n\n    switch (value) {\n      case \"=\":\n        handleSubmit();\n        break;\n      case \"C\":\n        handleClear();\n        break;\n      case number:\n        handleNumbers(value);\n        break;\n      case operator:\n        handleOperators(value);\n        break;\n      case \".\":\n        dotOperator();\n        break;\n      default:\n        break;\n    }\n  };\n  const handleOutput = () => {\n    setOutput(calculatorData);\n  };\n\n  useEffect(() => {\n    handleOutput();\n  }, [calculatorData]);\n  return (\n    <div className=\"container\">\n      <Display output={output} input={input} />\n      <KeyBoard handleInput={handleInput} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\n\r\nconst Display = ({ output, input }) => {\r\n  return (\r\n    <div className=\"display\">\r\n      <span id=\"display\" className=\"input\">\r\n        {input}\r\n      </span>\r\n      <span className=\"output\">{output}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","const calcData = [\r\n  { id: \"clear\", value: \"C\" },\r\n  { id: \"divide\", value: \"/\" },\r\n  { id: \"multiply\", value: \"x\" },\r\n  { id: \"seven\", value: 7 },\r\n  { id: \"eight\", value: 8 },\r\n  { id: \"nine\", value: 9 },\r\n  { id: \"subtract\", value: \"-\" },\r\n  { id: \"four\", value: 4 },\r\n  { id: \"five\", value: 5 },\r\n  { id: \"six\", value: 6 },\r\n  { id: \"add\", value: \"+\" },\r\n  { id: \"one\", value: 1 },\r\n  { id: \"two\", value: 2 },\r\n  { id: \"three\", value: 3 },\r\n  { id: \"equals\", value: \"=\" },\r\n  { id: \"zero\", value: 0 },\r\n  { id: \"decimal\", value: \".\" },\r\n];\r\n\r\nexport default calcData;\r\n","import React from \"react\";\r\nimport Data from \"./Data\";\r\n\r\nconst KeyBoard = ({ handleInput }) => {\r\n  /* const key = ({ keyData: id, value }, handleInput) => {\r\n    return (\r\n      <button id={id} onClick={() => handleInput(value)}>\r\n        {value}\r\n      </button>\r\n    );\r\n  }; */\r\n\r\n  return (\r\n    <div className=\"btn-container\">\r\n      {Data.map((item, key) => (\r\n        <button\r\n          className=\"btn\"\r\n          id={item.id}\r\n          onClick={() => handleInput(item.value)}\r\n        >\r\n          {item.value}\r\n        </button>\r\n      ))}\r\n      <button disabled={true} className=\"btn\" id=\"questent\">\r\n        %\r\n      </button>\r\n      <button disabled={true} className=\"btn\" id=\"plus-minus\">\r\n        +/-\r\n      </button>\r\n      <button disabled={true} className=\"btn\" id=\"bracket\">\r\n        ()\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KeyBoard;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}